// <auto-generated />
using System;
using FocusBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FocusBackend.Migrations
{
    [DbContext(typeof(FocusContext))]
    [Migration("20191204190721_SeedDataAdded")]
    partial class SeedDataAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FocusBackend.Models.Activity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID");

                    b.Property<DateTime>("Completion");

                    b.Property<DateTime>("Creation");

                    b.Property<string>("Description");

                    b.Property<bool>("Done");

                    b.Property<int>("Importance");

                    b.Property<string>("Name");

                    b.Property<int>("Rank");

                    b.Property<int>("Urgency");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Activities");

                    b.HasData(
                        new { ID = 1, CategoryID = 2, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 487, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 486, DateTimeKind.Local), Description = "Outsourced From Temp Agency", Done = false, Importance = 9, Name = "Pay Workers", Rank = 18, Urgency = 9 },
                        new { ID = 2, CategoryID = 6, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Follow Up With Prospects", Done = false, Importance = 10, Name = "Sales Planning", Rank = 13, Urgency = 3 },
                        new { ID = 3, CategoryID = 8, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Get More Stamps For Paychecks", Done = false, Importance = 4, Name = "Buy Stamps", Rank = 10, Urgency = 6 },
                        new { ID = 4, CategoryID = 7, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Make The Restaurant Presentable", Done = false, Importance = 5, Name = "Clean Store", Rank = 10, Urgency = 5 },
                        new { ID = 5, CategoryID = 5, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Keep The Lights On", Done = false, Importance = 8, Name = "Pay Bills", Rank = 16, Urgency = 8 },
                        new { ID = 6, CategoryID = 7, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Set Up Deliveries For Stock", Done = false, Importance = 7, Name = "Order Food", Rank = 12, Urgency = 5 },
                        new { ID = 7, CategoryID = 1, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Turn In Newspaper Ad", Done = false, Importance = 5, Name = "Advertising", Rank = 14, Urgency = 9 },
                        new { ID = 8, CategoryID = 3, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Go Through Invoices", Done = false, Importance = 5, Name = "Paperwork", Rank = 14, Urgency = 9 },
                        new { ID = 9, CategoryID = 4, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Respond To Complaint", Done = false, Importance = 5, Name = "Client Concern", Rank = 14, Urgency = 9 },
                        new { ID = 10, CategoryID = 2, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Check Employee Pay", Done = false, Importance = 5, Name = "Paycheck Error", Rank = 14, Urgency = 9 },
                        new { ID = 11, CategoryID = 6, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Plan Presentation", Done = false, Importance = 5, Name = "New Member Outreach", Rank = 14, Urgency = 9 },
                        new { ID = 12, CategoryID = 8, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Fix Front Steps", Done = false, Importance = 5, Name = "Building Maintenance", Rank = 14, Urgency = 9 },
                        new { ID = 13, CategoryID = 5, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Next Quarter Cleaning Funds", Done = false, Importance = 5, Name = "Allocation", Rank = 14, Urgency = 9 },
                        new { ID = 14, CategoryID = 1, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "FB and Google Ads", Done = false, Importance = 5, Name = "Online Ad", Rank = 14, Urgency = 9 },
                        new { ID = 15, CategoryID = 3, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Organize receipts", Done = false, Importance = 5, Name = "Tax Paperwork", Rank = 14, Urgency = 9 },
                        new { ID = 16, CategoryID = 4, Completion = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Creation = new DateTime(2019, 12, 4, 14, 7, 21, 488, DateTimeKind.Local), Description = "Thank User For Nice Online Review", Done = false, Importance = 5, Name = "Accolade", Rank = 14, Urgency = 9 }
                    );
                });

            modelBuilder.Entity("FocusBackend.Models.Business", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image");

                    b.Property<string>("Industry");

                    b.Property<string>("Name");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Businesses");

                    b.HasData(
                        new { ID = 1, Image = "image", Industry = "School", Name = "Jane's Dojo", UserID = 1 }
                    );
                });

            modelBuilder.Entity("FocusBackend.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessID");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("BusinessID");

                    b.ToTable("Categories");

                    b.HasData(
                        new { ID = 1, BusinessID = 1, Description = "Marketing And Promotion Activities", Name = "Marketing" },
                        new { ID = 2, BusinessID = 1, Description = "Payroll Activities", Name = "Payroll" },
                        new { ID = 3, BusinessID = 1, Description = "Accounting and Auditing Activities", Name = "Accounting" },
                        new { ID = 4, BusinessID = 1, Description = "How You Help Your Customers", Name = "Customer Service" },
                        new { ID = 5, BusinessID = 1, Description = "Managing Your Budget And Looking To The Future", Name = "Budgeting" },
                        new { ID = 6, BusinessID = 1, Description = "Give Your Sales A Boost", Name = "Sales" },
                        new { ID = 7, BusinessID = 1, Description = "Operational Activities", Name = "Operations" },
                        new { ID = 8, BusinessID = 1, Description = "Small Activities That Must Be Done", Name = "Small Tasks" }
                    );
                });

            modelBuilder.Entity("FocusBackend.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new { ID = 1, Email = "JSmith@MyEmail.com", Image = "./images/blank-profile-picture.png", Name = "Jane Smith", Phone = "440-454-1980" }
                    );
                });

            modelBuilder.Entity("FocusBackend.Models.Activity", b =>
                {
                    b.HasOne("FocusBackend.Models.Category", "Category")
                        .WithMany("Activities")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FocusBackend.Models.Business", b =>
                {
                    b.HasOne("FocusBackend.Models.User", "User")
                        .WithMany("Businesses")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FocusBackend.Models.Category", b =>
                {
                    b.HasOne("FocusBackend.Models.Business", "Business")
                        .WithMany("Categories")
                        .HasForeignKey("BusinessID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
